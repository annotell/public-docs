"use strict";(self.webpackChunkkognic_sdk_docs=self.webpackChunkkognic_sdk_docs||[]).push([[7767],{678:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>m,frontMatter:()=>s,metadata:()=>c,toc:()=>u});var i=a(4848),t=a(8453),r=a(1470),o=a(9365);const s={title:"Calibrations Overview"},l=void 0,c={id:"kognic-io/calibrations/overview",title:"Calibrations Overview",description:"Scenes with 2D and 3D data across various coordinate systems need calibration to align sensors by location and orientation.",source:"@site/docs/kognic-io/calibrations/overview.mdx",sourceDirName:"kognic-io/calibrations",slug:"/kognic-io/calibrations/overview",permalink:"/docs/kognic-io/calibrations/overview",draft:!1,unlisted:!1,editUrl:"https://github.com/annotell/public-docs/edit/master/docs-src/docs/kognic-io/calibrations/overview.mdx",tags:[],version:"current",frontMatter:{title:"Calibrations Overview"},sidebar:"docs",previous:{title:"Working with Scenes & Inputs",permalink:"/docs/kognic-io/working_with_scenes_and_inputs"},next:{title:"Lidar Calibrations",permalink:"/docs/kognic-io/calibrations/lidars"}},d={},u=[{value:"How to create a calibration",id:"how-to-create-a-calibration",level:2},{value:"Next steps",id:"next-steps",level:2}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components},{Details:a}=n;return a||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["Scenes with 2D and 3D data across various ",(0,i.jsx)(n.a,{href:"/docs/kognic-io/coordinate_systems",children:"coordinate systems"})," need ",(0,i.jsx)(n.strong,{children:"calibration"})," to align sensors by location and orientation.\nThis includes projecting 3D points onto the camera\u2019s image plane."]}),"\n",(0,i.jsxs)(a,{children:[(0,i.jsx)("summary",{children:(0,i.jsx)("h2",{style:{margin:"0px"},children:"Types of calibrations"})}),(0,i.jsx)(n.p,{children:"All calibrations detail a sensor\u2019s 3D position and orientation relative to the reference system.\nThey also map 3D points to the camera\u2019s image plane."}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["For LiDAR/RADAR, there is only one type of calibration available, ",(0,i.jsx)(n.a,{href:"/docs/kognic-io/calibrations/lidars",children:"read more here"})]}),"\n",(0,i.jsxs)(n.li,{children:["For cameras, we support different types of ",(0,i.jsx)(n.a,{href:"/docs/kognic-io/calibrations/cameras-standard",children:"standard camera calibrations"}),", where you only\nhave to provide the intrinsic parameters of the camera."]}),"\n"]}),(0,i.jsx)(n.admonition,{title:"Unsupported camera model",type:"tip",children:(0,i.jsxs)(n.p,{children:["If your camera model is not supported, you can also provide\na ",(0,i.jsx)(n.a,{href:"/docs/kognic-io/calibrations/cameras-custom",children:"custom camera calibration"})," where you provide the implementation in the form of a WebAssembly module."]})})]}),"\n",(0,i.jsx)(n.h2,{id:"how-to-create-a-calibration",children:"How to create a calibration"}),"\n",(0,i.jsxs)(n.p,{children:["See this example of how to create a calibration for a LIDAR sensor and two camera sensors of type Pinhole. ",(0,i.jsx)(n.strong,{children:"For other camera types as Kannala, Fisheye etc, see"})," ",(0,i.jsx)(n.a,{href:"https://github.com/annotell/kognic-io-examples-python/tree/master/examples/calibration",children:(0,i.jsx)(n.strong,{children:"kognic-io-examples"})}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'from kognic.io.client import KognicIOClient\nfrom kognic.io.model import SensorCalibration\nfrom kognic.io.model.calibration.camera.common import CameraMatrix, DistortionCoefficients\nfrom kognic.io.model.calibration.camera.pinhole_calibration import PinholeCalibration\nfrom kognic.io.model.calibration.common import Position, RotationQuaternion\nfrom kognic.io.model.calibration.common import Position, RotationQuaternion\nfrom kognic.io.model.calibration.lidar.lidar_calibration import LidarCalibration, LidarFieldOfView\n\nclient = KognicIOClient()\n\n# Create a sample calibration for lidar.\nlidar_position = Position(x=0.0, y=0.0, z=0.0)\nlidar_rotation = RotationQuaternion(w=1.0, x=0.0, y=0.0, z=0.0)\nlidar_fov = LidarFieldOfView(start_angle_deg=315, stop_angle_deg=45, depth=200)\n\nlidar_calibration = LidarCalibration(position=lidar_position, rotation_quaternion=lidar_rotation, field_of_view=lidar_fov)\n\n# Create a sample calibration for a Pinhole camera. For other camera types visit:\n# https://github.com/annotell/kognic-io-examples-python/tree/master/examples/calibration\ncamera_position = Position(x=0.0, y=0.0, z=0.0)\ncamera_rotation = RotationQuaternion(w=1.0, x=0.0, y=0.0, z=0.0)\ncamera_camera_matrix = CameraMatrix(fx=3450, fy=3250, cx=622, cy=400)\ncamera_distortion_coefficients = DistortionCoefficients(k1=0.0, k2=0.0, p1=0.0, p2=0.0, k3=1.0)\n\npinhole_calibration = PinholeCalibration(\n    position=camera_position,\n    rotation_quaternion=camera_rotation,\n    camera_matrix=camera_camera_matrix,\n    distortion_coefficients=camera_distortion_coefficients,\n    image_height=1080,\n    image_width=1920,\n    field_of_view=190.0,\n)\n\nsensor_calibration = SensorCalibration(\n  external_id="Create your own id here", # to make it easier for you to find the calibration later\n  calibration={\n    # The keys: "lidar", "LEFT_FRONT_CAMERA" etc, must match the\n    # names of the sensors in the scenes that use this calibration\n    "lidar": lidar_calibration,\n    "LEFT_FRONT_CAMERA": pinhole_calibration,\n    "RIGHT_FRONT_CAMERA": pinhole_calibration\n  }\n)\ncreated_calibration = client.calibration.create_calibration(sensor_calibration)\nprint(f"Created calibration with id {created_calibration.id}")\n'})}),"\n",(0,i.jsx)(n.admonition,{title:"reuse calibration",type:"tip",children:(0,i.jsx)(n.p,{children:"Note that after a calibration has been created you can, and should, reuse the same calibration for multiple scenes if possible, see below."})}),"\n",(0,i.jsxs)(a,{children:[(0,i.jsx)("summary",{children:(0,i.jsx)("h2",{style:{margin:"0px"},children:"Get calibrations"})}),(0,i.jsxs)(n.p,{children:["Existing calibrations can be fetched with the retrieved id or with the provided external id.\nThis can either be done via the client in Python or via ",(0,i.jsx)(n.code,{children:"kognicutil"}),"."]}),(0,i.jsxs)(r.A,{children:[(0,i.jsx)(o.A,{value:"python",label:"Python",default:!0,children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'# Fetch calibration by id\nclient.calibration.get_calibration("e95980c4-fee2-4b91-9316-1bffbcb5a896")\n\n# Fetch calibration by external id\nclient.calibration.get_calibrations(external_id="Collection 2020-06-16")\n'})})}),(0,i.jsx)(o.A,{value:"kognicutil",label:"kognicutil",default:!0,children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# Fetch calibration by id\nkognicutil calibration --id "e95980c4-fee2-4b91-9316-1bffbcb5a896"\n\n# Fetch calibration by external id\nkognicutil calibration --external-id "Collection 2020-06-16"\n'})})})]})]}),"\n",(0,i.jsx)(n.h2,{id:"next-steps",children:"Next steps"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/docs/kognic-io/calibrations/lidars",children:"Lidar calibrations"}),": Learn about lidar calibrations"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/docs/kognic-io/calibrations/cameras-standard",children:"Standard camera calibrations"}),": Learn about the different types standard camera calibrations that are supported"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/docs/kognic-io/calibrations/cameras-custom",children:"Custom camera calibrations"}),": Learn how to create a custom camera calibration"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/docs/upload-your-first-scene",children:"Upload your first scene"}),": Quick guide on how to upload scenes to the Kognic Platform"]}),"\n"]})]})}function m(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},9365:(e,n,a)=>{a.d(n,{A:()=>o});a(6540);var i=a(8215);const t={tabItem:"tabItem_Ymn6"};var r=a(4848);function o(e){let{children:n,hidden:a,className:o}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,i.A)(t.tabItem,o),hidden:a,children:n})}},1470:(e,n,a)=>{a.d(n,{A:()=>j});var i=a(6540),t=a(8215),r=a(3104),o=a(6347),s=a(205),l=a(7485),c=a(1682),d=a(9466);function u(e){return i.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:a}=e;return(0,i.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:a,attributes:i,default:t}}=e;return{value:n,label:a,attributes:i,default:t}}))}(a);return function(e){const n=(0,c.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,a])}function m(e){let{value:n,tabValues:a}=e;return a.some((e=>e.value===n))}function b(e){let{queryString:n=!1,groupId:a}=e;const t=(0,o.W6)(),r=function(e){let{queryString:n=!1,groupId:a}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:n,groupId:a});return[(0,l.aZ)(r),(0,i.useCallback)((e=>{if(!r)return;const n=new URLSearchParams(t.location.search);n.set(r,e),t.replace({...t.location,search:n.toString()})}),[r,t])]}function p(e){const{defaultValue:n,queryString:a=!1,groupId:t}=e,r=h(e),[o,l]=(0,i.useState)((()=>function(e){let{defaultValue:n,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!m({value:n,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const i=a.find((e=>e.default))??a[0];if(!i)throw new Error("Unexpected error: 0 tabValues");return i.value}({defaultValue:n,tabValues:r}))),[c,u]=b({queryString:a,groupId:t}),[p,f]=function(e){let{groupId:n}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(n),[t,r]=(0,d.Dv)(a);return[t,(0,i.useCallback)((e=>{a&&r.set(e)}),[a,r])]}({groupId:t}),g=(()=>{const e=c??p;return m({value:e,tabValues:r})?e:null})();(0,s.A)((()=>{g&&l(g)}),[g]);return{selectedValue:o,selectValue:(0,i.useCallback)((e=>{if(!m({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),f(e)}),[u,f,r]),tabValues:r}}var f=a(2303);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=a(4848);function v(e){let{className:n,block:a,selectedValue:i,selectValue:o,tabValues:s}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,r.a_)(),d=e=>{const n=e.currentTarget,a=l.indexOf(n),t=s[a].value;t!==i&&(c(n),o(t))},u=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const a=l.indexOf(e.currentTarget)+1;n=l[a]??l[0];break}case"ArrowLeft":{const a=l.indexOf(e.currentTarget)-1;n=l[a]??l[l.length-1];break}}n?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,t.A)("tabs",{"tabs--block":a},n),children:s.map((e=>{let{value:n,label:a,attributes:r}=e;return(0,x.jsx)("li",{role:"tab",tabIndex:i===n?0:-1,"aria-selected":i===n,ref:e=>l.push(e),onKeyDown:u,onClick:d,...r,className:(0,t.A)("tabs__item",g.tabItem,r?.className,{"tabs__item--active":i===n}),children:a??n},n)}))})}function y(e){let{lazy:n,children:a,selectedValue:t}=e;const r=(Array.isArray(a)?a:[a]).filter(Boolean);if(n){const e=r.find((e=>e.props.value===t));return e?(0,i.cloneElement)(e,{className:"margin-top--md"}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:r.map(((e,n)=>(0,i.cloneElement)(e,{key:n,hidden:e.props.value!==t})))})}function _(e){const n=p(e);return(0,x.jsxs)("div",{className:(0,t.A)("tabs-container",g.tabList),children:[(0,x.jsx)(v,{...n,...e}),(0,x.jsx)(y,{...n,...e})]})}function j(e){const n=(0,f.A)();return(0,x.jsx)(_,{...e,children:u(e.children)},String(n))}},8453:(e,n,a)=>{a.d(n,{R:()=>o,x:()=>s});var i=a(6540);const t={},r=i.createContext(t);function o(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);