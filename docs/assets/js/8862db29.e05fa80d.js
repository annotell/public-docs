"use strict";(self.webpackChunkkognic_sdk_docs=self.webpackChunkkognic_sdk_docs||[]).push([[7454],{6405:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>i,contentTitle:()=>r,default:()=>l,frontMatter:()=>a,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"kognic-io/scenes/cameras_seq","title":"Cameras Sequence","description":"A CamerasSeq  consists of a sequence of camera images, where each frame can contain between 1-9 images from different sensors. For more documentation on what each field corresponds to in the CamerasSeq object please check the section related to Scene Overview.","source":"@site/docs/kognic-io/scenes/cameras_seq.md","sourceDirName":"kognic-io/scenes","slug":"/kognic-io/scenes/cameras_seq","permalink":"/docs/kognic-io/scenes/cameras_seq","draft":false,"unlisted":false,"editUrl":"https://github.com/annotell/public-docs/edit/master/docs-src/docs/kognic-io/scenes/cameras_seq.md","tags":[],"version":"current","frontMatter":{"title":"Cameras Sequence"},"sidebar":"docs","previous":{"title":"Lidars and Cameras","permalink":"/docs/kognic-io/scenes/lidars_and_cameras"},"next":{"title":"Lidars and Cameras Sequence","permalink":"/docs/kognic-io/scenes/lidars_and_cameras_seq"}}');var o=s(4848),c=s(8453);const a={title:"Cameras Sequence"},r=void 0,i={},d=[];function m(e){const n={a:"a",admonition:"admonition",code:"code",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:["A ",(0,o.jsx)(n.code,{children:"CamerasSeq"}),"  consists of a sequence of camera images, where each frame can contain between 1-9 images from different sensors. For more documentation on what each field corresponds to in the ",(0,o.jsx)(n.code,{children:"CamerasSeq"})," object please check the section related to ",(0,o.jsx)(n.a,{href:"/docs/kognic-io/overview",children:"Scene Overview"}),"."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",metastring:"reference",children:"https://github.com/annotell/kognic-io-examples-python/blob/master/examples/cameras_seq_images.py\n"})}),"\n",(0,o.jsx)(n.admonition,{title:"Use dryrun to validate scene",type:"tip",children:(0,o.jsxs)(n.p,{children:["Setting ",(0,o.jsx)(n.code,{children:"dryrun"})," parameter to true in the method call, will validate the scene using the API but not create it."]})})]})}function l(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(m,{...e})}):m(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>r});var t=s(6540);const o={},c=t.createContext(o);function a(e){const n=t.useContext(c);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),t.createElement(c.Provider,{value:n},e.children)}}}]);