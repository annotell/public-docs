"use strict";(self.webpackChunkkognic_sdk_docs=self.webpackChunkkognic_sdk_docs||[]).push([[499],{9391:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>d});var t=s(4848),c=s(8453);const o={title:"FAQ",description:"FAQ"},i=void 0,r={id:"kognic-io/FAQ",title:"FAQ",description:"FAQ",source:"@site/docs/kognic-io/FAQ.md",sourceDirName:"kognic-io",slug:"/kognic-io/FAQ",permalink:"/docs/kognic-io/FAQ",draft:!1,unlisted:!1,editUrl:"https://github.com/annotell/public-docs/edit/master/docs-src/docs/kognic-io/FAQ.md",tags:[],version:"current",frontMatter:{title:"FAQ",description:"FAQ"},sidebar:"docs",previous:{title:"Errors & Troubleshooting",permalink:"/docs/kognic-io/error_handling"},next:{title:"Images",permalink:"/docs/kognic-io/resources/images"}},a={},d=[{value:"Receiving <code>requests.exceptions.HTTPError: 403 Client Error: Forbidden for url: ...</code> when trying to create scenes",id:"receiving-requestsexceptionshttperror-403-client-error-forbidden-for-url--when-trying-to-create-scenes",level:3},{value:"How do I know that my scene was created successfully?",id:"how-do-i-know-that-my-scene-was-created-successfully",level:3},{value:"How can I view my scene?",id:"how-can-i-view-my-scene",level:3},{value:"Why are the cuboids rotated by 90 degrees?",id:"why-are-the-cuboids-rotated-by-90-degrees",level:3}];function l(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h3:"h3",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.h3,{id:"receiving-requestsexceptionshttperror-403-client-error-forbidden-for-url--when-trying-to-create-scenes",children:["Receiving ",(0,t.jsx)(n.code,{children:"requests.exceptions.HTTPError: 403 Client Error: Forbidden for url: ..."})," when trying to create scenes"]}),"\n",(0,t.jsxs)(n.p,{children:["This implies that the authenticated user does not have access to the endpoint being called. Make sure you're ",(0,t.jsx)(n.a,{href:"../kognic-apis#authentication",children:"authenticating"})," correctly. If a Kognic user, make sure ",(0,t.jsx)(n.code,{children:"client_organization_id"})," is specified on the ",(0,t.jsx)(n.code,{children:"KognicIOClient"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"how-do-i-know-that-my-scene-was-created-successfully",children:"How do I know that my scene was created successfully?"}),"\n",(0,t.jsxs)(n.p,{children:["Whenever a ",(0,t.jsx)(n.code,{children:".create(...)"})," call for a scene has been successfully made it's (asynchronously) submitted for pre-processing in the Kognic platform. The scene is available only once the pre-processing has been successfully executed. However, pre-processing can also fail, for example if the pointcloud or image files are poorly formatted or corrupt."]}),"\n",(0,t.jsxs)(n.p,{children:["The easiest way to check the status of a scene is the ",(0,t.jsx)(n.a,{href:"./working_with_scenes_and_inputs#scene-status",children:"scene status"})," field present on scenes returned by the method ",(0,t.jsx)(n.code,{children:"get_scenes_by_uuids(...)"}),". The scene is successfully created and available in the platform once the status is set to ",(0,t.jsx)(n.code,{children:"created"}),"."]}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.p,{children:["Since pre-processing is an asynchronous process it might take a while before the scene changes status from ",(0,t.jsx)(n.code,{children:"processing"})," to either ",(0,t.jsx)(n.code,{children:"created"})," or ",(0,t.jsx)(n.code,{children:"failed"}),"."]})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"# Example code of how to check if a scene has been successfully created\nresp = client.cameras.create(...)\n\n[scene] = client.scene.get_scenes_by_uuids([resp.scene_uuid])\n\n# Successfully created and available once status is `created`\nprint(f'Scene {scene.uuid} status:', scene.status)\n"})}),"\n",(0,t.jsx)(n.h3,{id:"how-can-i-view-my-scene",children:"How can I view my scene?"}),"\n",(0,t.jsxs)(n.p,{children:["Successfully created scenes can be viewed in the Kognic platform via their ",(0,t.jsx)(n.em,{children:"view-link"}),". The view-link can be accessed via the ",(0,t.jsx)(n.a,{href:"./working_with_scenes_and_inputs#response",children:(0,t.jsx)(n.code,{children:"view_link"})})," field present on scenes returned by the method ",(0,t.jsx)(n.code,{children:"get_scenes_by_uuids(...)"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'# Example code of how to access view-links for a scene\n[scene] = client.scene.get_scenes_by_uuids([resp.scene_uuid])\n(f"Scene {scene.external_id} view-link: {scene.view_link}")\n'})}),"\n",(0,t.jsx)(n.h3,{id:"why-are-the-cuboids-rotated-by-90-degrees",children:"Why are the cuboids rotated by 90 degrees?"}),"\n",(0,t.jsxs)(n.p,{children:["The coordinate system is defined by the uploaded data, but the rotation is defined by Kognic. This is somewhat\ndifferent (90-degree rotation) compared to the ISO 8855 standard.\nSee ",(0,t.jsx)(n.a,{href:"/docs/openlabel/openlabel-format#rotation-of-cuboids",children:"Rotation of Cuboids"})," for more about this and how you can\nconvert to ISO 8855."]})]})}function h(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>r});var t=s(6540);const c={},o=t.createContext(c);function i(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:i(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);