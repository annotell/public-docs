"use strict";(self.webpackChunkkognic_sdk_docs=self.webpackChunkkognic_sdk_docs||[]).push([[6739],{7417:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>s,toc:()=>r});var t=o(4848),a=o(8453);const l={title:"kognic-openlabel"},i=void 0,s={id:"openlabel/python-client",title:"kognic-openlabel",description:"Using this OpenLABEL json schema we have created a python package kognic-openlabel",source:"@site/docs/openlabel/python-client.md",sourceDirName:"openlabel",slug:"/openlabel/python-client",permalink:"/docs/openlabel/python-client",draft:!1,unlisted:!1,editUrl:"https://github.com/annotell/public-docs/edit/master/docs-src/docs/openlabel/python-client.md",tags:[],version:"current",frontMatter:{title:"kognic-openlabel"},sidebar:"docs",previous:{title:"OpenLABEL format",permalink:"/docs/openlabel/openlabel-format"},next:{title:"Projects",permalink:"/docs/kognic-io/project"}},c={},r=[];function p(e){const n={a:"a",code:"code",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["Using this OpenLABEL json schema we have created a python package ",(0,t.jsx)(n.a,{href:"https://pypi.org/project/kognic-openlabel",children:(0,t.jsx)(n.code,{children:"kognic-openlabel"})}),"\nwhich makes it easier to work with annotations. The python models the OpenLABEL format as ",(0,t.jsx)(n.code,{children:"pydantic"})," models and can be installed with"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"pip install --upgrade kognic-openlabel\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Since ",(0,t.jsx)(n.code,{children:"pydantic"})," is used, the model contains validation as well as methods for serialization and deserialization.\nBelow are examples of how you can easily change between different formats"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'openlabel_dict = {\n    "openlabel": {\n        "metadata": {\n            "schema_version": "1.0.0"\n        }\n    }\n}\n\nfrom kognic.openlabel.models import OpenLabelAnnotation\n\n# Deserialize dict\nopenlabel_annotation = OpenLabelAnnotation.model_validate(openlabel_dict)\n\n# Serialize to json\nopenlabel_json = openlabel_annotation.model_dump_json(exclude_none=True)\n\n# Deserialize json\nopenlabel_annotation = OpenLabelAnnotation.model_validate_json(openlabel_json)\n\n# Serialize to dict\nopenlabel_dict = openlabel_annotation.model_dump(exclude_none=True)\n'})})]})}function d(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>i,x:()=>s});var t=o(6540);const a={},l=t.createContext(a);function i(e){const n=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),t.createElement(l.Provider,{value:n},e.children)}}}]);